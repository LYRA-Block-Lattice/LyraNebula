@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@page "/showbb"
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration

<h1>Status of All Authorizer Nodes </h1>

@if (NodeState.Value.IsLoading)
{
    <p><em>Checking all nodes... This may take a while.</em></p>
    <div class="spinner"></div>
}
    <div style="padding-bottom: 5px"><button class="btn btn-primary" @onclick="Refresh">
        Refresh
    </button>&nbsp;
    <span>Time Updated (UTC): @NodeState.Value.TimeStamp</span>
    </div>
@if (NodeState.Value.nodeStatus != null)
{
    <div>
    <table class="table">
        <thead>
            <tr>
                <th>Rank</th>
                <th>Primary</th>
                <th>PoS Wallet</th>
                <th></th>
                <th>IP Address</th>
                <th>Votes</th>
                <th>API Status</th>
                <th>UTC Now</th>
                <th>Last Cons Block</th>
                <th>In Sync</th>
                <th>Version</th>
                <th>Status</th>
                <th>Total Block Count</th>
                <th>Last Float Hash</th>
                <th>Candidates</th>
                <th>Connected Peers</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var nodeInfo in NodeState.Value.GetRankedList())
            {
                string hostName = null;
                string ipaddr = NodeState.Value.bb.NodeAddresses[nodeInfo.ID];
                if(seedHosts.ContainsKey(ipaddr))
                    hostName = seedHosts[ipaddr];
                else
                    hostName = ipaddr;

                string style = null;
                if(nodeInfo.ID == NodeState.Value.bb.CurrentLeader)
                {
                    style = "color: gold; background-color:black; font-weight: bold;";
                }
                else if(nodeInfo.IsPrimary)
                {
                    style = "background-color:#e0f4ff; ";
                }
                var imgSrc = $"/images/country/{nodeInfo.Country.ToLower()}.png";

                <tr style=@style>
                <td align="center">@nodeInfo.Index</td>
                <td align="center">@(nodeInfo.IsPrimary ? "Yes" : "No")</td>
                <td><a href="/showblock/@nodeInfo.ID">@nodeInfo.ID.Substring(0, 10)...</a></td>
                <td align="center"><img src="@imgSrc" alt="@nodeInfo.Country" title="@nodeInfo.Country" /></td>
                <td><span title="@ipaddr">@hostName</span></td>
                <td align="center">@nodeInfo.Votes</td>
                @if(nodeInfo.Status != null)
                    {
                <td>Connected OK.</td>
                <td>@nodeInfo.Status.Status.now</td>
                        @if(nodeInfo.Status.LastConsolidationHash==null || nodeInfo.Status.LastConsolidationHash.Length < 11)
                        {
                            <td></td>
                        }
                        else
                        {
                            <td><a href="/showblock/@nodeInfo.Status.LastConsolidationHash">@nodeInfo.Status.LastConsolidationHash.Substring(0, 10)...</a></td>
                        }
                <td>@nodeInfo.Status.SyncState</td>
                <td>@nodeInfo.Status.Status.version</td>
                <td>@nodeInfo.Status.Status.state</td>
                <td>@nodeInfo.Status.Status.totalBlockCount</td>
                        @if(nodeInfo.Status.Status.lastUnSolidationHash==null || nodeInfo.Status.Status.lastUnSolidationHash.Length < 11)
                        {
                            <td></td>
                        }
                        else
                        {
                            <td>@nodeInfo.Status.Status.lastUnSolidationHash.Substring(0, 10)...</td>
                        }
                <td align="center">@nodeInfo.Status.Status.activePeers</td>
                <td align="center">@nodeInfo.Status.Status.connectedPeers</td>
                    }
                else
                {
                <td>Failed to connect</td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                }
            </tr>
            }
        </tbody>
    </table>
    </div>
    <div style="font-family:verdana;font-size:70%;">
        <h5>Note:</h5>
        <ul>
            <li>The row with color gold is the current leader node. Leader node is randomly chosen from primary node list.</li>
            <li>If API Status shows "Failed to connect" please check if tcp port 5503-5505/mainnet, 4503-4505/testnet are opened by the firewall.</li>
            <li>The minimal votes to become primary is 1,000,000 LYR. </li>
            <li>Data disaplyed may be delayed for several minutes or even hours, depends on the activities of Lyra network.</li>
            <li>If your node is running but not shown in the list, please verify the minimal version required. (>= @Lyra.Core.API.LyraGlobal.MINIMAL_COMPATIBLE_VERSION)</li>
        </ul>
    </div>
}


