@namespace UserLibrary.Components
@using DexServer.Ext
@using System.ComponentModel
@using Fluxor
@using Lyra.Core.API
@using Lyra.Core.Accounts
@using Lyra.Core.Blocks
@using Lyra.Data.API
@using Lyra.Shared
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.Extensions.Configuration
@using Nebula.Data
@using Nebula.Store.WebWalletUseCase
@using UserLibrary.Data
@inject IConfiguration Configuration

<div class="flex-container">
    @if (ui == UI.entry)
    {
        <div class="mid">
            <TextEdit Role="TextRole.Password" Placeholder="Password" Size="Size.Large" @bind-Text="@txtValue1" />
        </div>
        <div class="mid">
            <TextEdit Role="TextRole.Password" Placeholder="Confirm Password" Size="Size.Large" @bind-Text="@txtValue2" />
        </div>
        <div class="mid">
            <Button Color="Color.Primary" Clicked="@CreateWallet">Create Wallet</Button>
        </div>
        <div class="mid">
            <Divider Style="width: 0px; height: 0px" />
        </div>
        <div class="mid">
            <a href="/login/key"><Button>Open with Private Key</Button></a>
        </div>
    }

    @if(ui == UI.success)
    {
        <div class="mid">
            Your wallet has been created.
        </div>
    }


    </div>



<Styled>
    .custom-password-icon {
        color: rgba(0,0,0,.45);
        cursor: pointer;
        transition: all .3s;
    }

        .flex-container {
        display:flex; 
        flex-direction: column;
        gap: 20px;
        justify-content:center;
        align-items:center;
        height: 100%;
        width: 100%;
    }

    .mid {
        align-self: center;
    }

    .bot {
        align-self: flex-end;
    }

</Styled>

@code {
    [Inject]
    private IState<WebWalletState> walletState { get; set; }

    [Inject]
    private IDispatcher Dispatcher { get; set; }

    [Parameter] 
    public EventCallback OnFinished { get; set; }
    [Inject] IMessageService MessageService { get; set; }

    enum UI {entry, success, failed}
    UI ui = UI.entry;

    RenderFragment extraok =
        @<a href="login"><Button Color="Color.Primary">Login</Button></a>;

        RenderFragment extrafail =
        @<Button Color="Color.Primary">Retry</Button>;

    private string txtValue1 { get; set; }
    private string txtValue2 { get; set; }
    private bool visible = false;

    private void CreateWallet()
    {
        var storeName = "nebstor";
        if(txtValue1 == txtValue2)
        {
            Dispatcher.Dispatch(new WebWalletCreateAction{
                store = storeName,
                name = "default", password = txtValue1});
            OnFinished.InvokeAsync();
        }
        else
        {
            MessageService.Info( "Passwords not match.", "Notice" );
        }
    }
}
