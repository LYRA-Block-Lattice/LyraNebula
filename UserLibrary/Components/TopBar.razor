@namespace UserLibrary.Components

@using Fluxor
@using Lyra.Core.API
@using Nebula.Store.WebWalletUseCase

<div class="top-row px-4">
    <div>
        @banner
    </div>
    <div>
        <a href="https://lyra.live/" target="_blank">About</a>
    </div>
</div>


@code
{
    [Inject]
    private IState<WebWalletState>? walletState { get; set; }

    RenderFragment? banner;

    protected override void OnInitialized()
    {
        WalletChanged(this, walletState.Value);

        walletState.StateChanged += this.WalletChanged;

        base.OnInitialized();
    }

    private void WalletChanged(object sender, WebWalletState wallet)
    {
        decimal balance1 = 0;
        if (wallet.wallet != null)
        {
            var blk = wallet.wallet.GetLatestBlock();
            if(blk!= null)
            {
                if (blk.Balances.ContainsKey("LYR"))
                    balance1 = blk.Balances["LYR"].ToBalanceDecimal();

            var bs = $"{balance1:N2}";
            banner = 
    @<div>Balance: <b>@bs</b> LYR</div>
        ;
            }
            else
            {
                banner = 
    @<div>Wallet is empty.</div>;
            }
        }
        else
            banner = 
    @<div>Wallet is not opened.</div>;
    }

    public void Dispose()
    {
        walletState.StateChanged -= this.WalletChanged;
    }
}