@page "/login"
@using Blazored.LocalStorage
@using Fluxor
@using Nebula.Store.WebWalletUseCase
@inject NavigationManager Navigation

@if(hasStore)
{
    <UserLibrary.Components.OpenWithPassword />
}
else
{
    <UserLibrary.Components.CreateWithPassword OnFinished="@(() => {hasStore = true;})" />
}

@code{
    [Inject]
    private IState<WebWalletState> walletState { get; set; }

    [Inject]
    private IDispatcher Dispatcher { get; set; }

    [Inject]
    public ILocalStorageService _localStorage { get; set; }

    bool hasStore;

    protected async override Task OnInitializedAsync()
    {
        if(walletState.Value.wallet != null)
        {
            Navigation.NavigateTo("wallet");
        }

        var storeName = "nebstor";

        if (await _localStorage.ContainKeyAsync(storeName))
            hasStore = true;
        else
            hasStore = false;

        await base.OnInitializedAsync();
    }
}